---
import Layout from '../layouts/Layout.astro';
import GameCard from '../components/GameCard.astro';
import { Image } from 'astro:assets';
import roles from '../roles.json';
import { readdirSync } from 'fs';
import Button from "../components/LogoutButton.astro";
import hasProfile from "../utils/profile";

const imageFolder = './public/';
const imageFiles = readdirSync(imageFolder) ;
const cookie: string = `${Astro.cookies.get(import.meta.env.COOKIE_NAME || "_Security_Login_")?.value}`;
const d = hasProfile(cookie, import.meta.env.COOKIE_SECRET || "secret");

if (d.success === false) {
	return Astro.redirect("/login");
}

function findDescriptionForRole(imageName: string) {
	const normalizedImageName = imageName.trim().normalize("NFC");
	const role = roles.roles.find(role =>
		role.name.trim().normalize("NFC") === normalizedImageName
	);
	return role ? role : `توضیحی برای ${imageName} یافت نشد.`;
}

---

<Layout title="King BoardGame">
	<main>
		<div class="absolute inset-0 -z-10 overflow-hidden">
			<svg class="absolute top-0 w-full" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
				<path fill="#4f46e5" fill-opacity="0.2" d="M0,96L30,106.7C60,117,120,139,180,154.7C240,171,300,181,360,160C420,139,480,85,540,64C600,43,660,53,720,96C780,139,840,213,900,213.3C960,213,1020,139,1080,96C1140,53,1200,43,1260,74.7C1320,107,1380,181,1410,218.7L1440,256L1440,0L1410,0C1380,0,1320,0,1260,0C1200,0,1140,0,1080,0C1020,0,960,0,900,0C840,0,780,0,720,0C660,0,600,0,540,0C480,0,420,0,360,0C300,0,240,0,180,0C120,0,60,0,30,0L0,0Z"></path>
			</svg>
			<svg class="absolute bottom-0 w-full" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
				<path fill="#4f46e5" fill-opacity="0.2" d="M0,224L30,202.7C60,181,120,139,180,133.3C240,128,300,160,360,192C420,224,480,256,540,234.7C600,213,660,139,720,128C780,117,840,171,900,181.3C960,192,1020,160,1080,144C1140,128,1200,128,1260,149.3C1320,171,1380,213,1410,234.7L1440,256L1440,320L1410,320C1380,320,1320,320,1260,320C1200,320,1140,320,1080,320C1020,320,960,320,900,320C840,320,780,320,720,320C660,320,600,320,540,320C480,320,420,320,360,320C300,320,240,320,180,320C120,320,60,320,30,320L0,320Z"></path>
			</svg>
		</div>

		<h1 class="text-2xl sm:text-4xl font-bold tracking-wide drop-shadow-md">
			Welcome To
			<span class="text-yellow-500">King</span>
			<span class="text-purple-500">Game</span>
		</h1>
		<div class="relative grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 lg:mx-12 gap-8">
			{imageFiles.map(image =>
				image !== "favicon.jpg" ?
					<GameCard
						title={image.replace(".jpg", "").replace("KART", "").replace("KING", "")}
						description={findDescriptionForRole(image.replace(".jpg", "").replace("KART", "").replace("KING", ""))?.description}
						imageSrc={image}
						dayAbility={findDescriptionForRole(image.replace(".jpg", "").replace("KART", "").replace("KING", ""))?.day_ability}
						nightAbility={findDescriptionForRole(image.replace(".jpg", "").replace("KART", "").replace("KING", ""))?.night_ability}
						group={findDescriptionForRole(image.replace(".jpg", "").replace("KART", "").replace("KING", ""))?.group}
					/> : null
			)}
		</div>

	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		//width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
